---
# File: install.yml - package installation tasks for Nomad

- name: OS packages
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ nomad_os_packages }}"
  tags: installation

- name: Check Nomad package checksum file
  stat:
    path: "/tmp/nomad_{{ nomad_version }}_SHA256SUMS"
  become: false
  run_once: true
  tags: installation
  register: nomad_checksum

- name: Get Nomad package checksum file
  get_url:
    url: "{{ nomad_checksum_file_url }}"
    dest: "/tmp/nomad_{{ nomad_version }}_SHA256SUMS"
  become: false
  run_once: true
  tags: installation
  when: not nomad_checksum.stat.exists

- name: Get Nomad package checksum
  shell: |
    set -o pipefail
    grep "{{ nomad_pkg }}" "/tmp/nomad_{{ nomad_version }}_SHA256SUMS"  | awk '{print $1}'
  args:
    executable: /bin/bash
  become: false
  register: nomad_sha256
  tags: installation

- name: Check Nomad package file
  stat:
    path: "/tmp/{{ nomad_pkg }}"
  become: false
  register: nomad_package

- name: Download Nomad {{ nomad_version }} archive
  get_url:
    url: "{{ nomad_zip_url }}"
    dest: "/tmp/{{ nomad_pkg }}"
    checksum: "sha256:{{ nomad_sha256.stdout }}"
    timeout: "42"
  become: false
  tags: installation
  when: not nomad_package.stat.exists

- name: Create Temporary Directory for Extraction
  tempfile:
    state: directory
    prefix: ansible-nomad.
  become: false
  register: install_temp
  tags: installation
  when: not nomad_package.stat.exists

- name: Unarchive Nomad
  unarchive:
    src: "/tmp/{{ nomad_pkg }}"
    dest: "{{ install_temp.path }}/"
    creates: "{{ install_temp.path }}/nomad"
    remote_src: yes
  become: false
  tags: installation
  when: not nomad_package.stat.exists

- name: Install Nomad
  copy:
    src: "{{ install_temp.path }}/nomad"
    dest: "{{ nomad_bin_dir }}"
    owner: "{{ nomad_user }}"
    group: "{{ nomad_group }}"
    mode: '0755'
    remote_src: yes
  tags: installation
  when: not nomad_package.stat.exists

- name: Cleanup
  file:
    path: "{{ install_temp.path }}"
    state: "absent"
  become: false
  tags: installation
  when: not nomad_package.stat.exists
